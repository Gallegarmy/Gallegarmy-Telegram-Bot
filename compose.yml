version: '3.8'

volumes:
  db_data:

networks:
  karma_net:
    driver: bridge

services:
  db:
    build:
      context: .
      dockerfile: .docker/mysql/Dockerfile
      args:
        BASE_DIRECTORY: .docker
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - karma_net
    restart: unless-stopped
    env_file: .env  # Ensures db service reads from .env

  telegram-bot:
    image: ghcr.io/gallegarmy/gallegarmy-telegram-bot:latest
    build:
      context: .
      dockerfile: .docker/telegram_bot/Dockerfile
      args:
        LOG_LEVEL: ${LOG_LEVEL}
        BOT_TOKEN: ${BOT_TOKEN}
        MYSQL_HOST: ${MYSQL_HOST}
        MYSQL_PORT: ${MYSQL_PORT}
        MYSQL_DATABASE: ${MYSQL_DATABASE}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        EVENTBRITE_ORGANIZATION_ID: ${EVENTBRITE_ORGANIZATION_ID}
        EVENTBRITE_API: ${EVENTBRITE_API}
        EVENTBRITE_TOKEN: ${EVENTBRITE_TOKEN}
    environment:
      LOG_LEVEL: ${LOG_LEVEL}
      BOT_TOKEN: ${BOT_TOKEN}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      EVENTBRITE_ORGANIZATION_ID: ${EVENTBRITE_ORGANIZATION_ID}
      EVENTBRITE_API: ${EVENTBRITE_API}
      EVENTBRITE_TOKEN: ${EVENTBRITE_TOKEN}
    depends_on:
      - db
    networks:
      - karma_net
    restart: unless-stopped
    env_file: .env  # Ensures telegram-bot service reads from .env
